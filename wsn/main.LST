C51 COMPILER V9.00   MAIN                                                                  10/18/2017 12:41:42 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: C:\program tool\keil\C51\BIN\C51.EXE main.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          /***************************************************************
   2          通过定时器0，由ii设定定时时间，ii=1就是5ms，ii=24000，每隔2分钟进入一次发送程序，
   3          发送地址是0000
   4          send_ask是发送请求；
   5          i是接收计数变量，用来确定接收个数；
   6          总共5个参数，分别是空气温度，空气湿度，土壤湿度，土壤电导率和光照度
   7          
   8          ***************************************************************/
   9          #include <c8051f340.h>
  10          #include "def.h"
  11          #include "string.h"
  12          
  13          int  i,ii;
  14          sbit LED1 = P0^6;                                                  // D7
  15          sbit LED2 = P0^7;                                                  // D8
  16          sbit relay = P3^6;                                                 // 继电器
  17          
  18          bit                 send_ask;
  19          bit                                     receive_bit;                    // 接收标志位
  20          u8                                      receive_data;                   // 接收到的数据
  21          tagZigbeePkg            recv_data;                              // 已接收的数据包
  22          tagZigbeeSendPkg        send_data;                              // 待发送的数据包
  23          
  24          void SysclkInit(void);
  25          void PortInit(void);
  26          void Uart0Init(void);
  27          void InitAdc(void);                         
  28          u32  StartAdc(u8 Pxx);
  29          void SendAdc(void);
  30          void SendAdc2(void);
  31          void ZigbeeSend(void);
  32          void TestZigbeeSend(void);
  33          void Timer0Init(void);
  34          void Delay(u16 i);
  35          void Delay_ms(u16 i);
  36          void Delay_s(u16 i);
  37          
  38          void main(void)
  39          {
  40   1              PCA0MD &= ~0x40;                                                // 禁止看门狗 
  41   1              SysclkInit();                                                   // 初始化是系统时钟到12M
  42   1              PortInit();                                                             // 初始挂交叉开关和I/O口
  43   1              Uart0Init();                                                    // 初始化UART0
  44   1              Timer0Init();                                                   // 初始化定时器0
  45   1              InitAdc();                                                              // AD初始化
  46   1              i    = 0;
  47   1              ii   = 0;
  48   1              LED1 = 1;
  49   1              LED2 = 0;
  50   1              relay = 0;
  51   1              Delay_ms(10);
  52   1              EA   = 1;
  53   1              ES0  = 1;
  54   1              ET0  = 1;
  55   1              TR0  = 1;
C51 COMPILER V9.00   MAIN                                                                  10/18/2017 12:41:42 PAGE 2   

  56   1              send_ask = 0;
  57   1              relay = 0;
  58   1              while(1)
  59   1              {
  60   2                      if(send_ask == 1)
  61   2                      {
  62   3                              TR0 = 0;                                                                 //关闭定时器计数，防止程序还没结束进入下一次中断
  63   3                              send_ask = 0;
  64   3                              SendAdc();                                                               //将数据发送给中继点           
  65   3                              TR0 = 1;
  66   3                      }
  67   2                      
  68   2              }
  69   1              
  70   1      }
  71          
  72          
  73          
  74          
  75          
  76          /********************************************************************
  77          * 功能 : 系统时钟初始化
  78          * 输入 : 无
  79          * 输出 : 无
  80          ***********************************************************************/
  81          
  82          void SysclkInit(void)
  83          {
  84   1              REG0CN = 0x00;                                                  // 稳压器使能 
  85   1              OSCICN |= 0x83;                                                 // 不分频,使用内部12M晶振,系统时钟频率为12MHz
  86   1              OSCICL = 0x00;                                                  // 内部晶振工作在最高频率
  87   1              OSCLCN = 0x00;                                                  // 禁止内部L-F振荡器
  88   1              OSCXCN = 0x00;                                                  // 关闭外部振荡器
  89   1              TMOD = 0;                                                               // 定时器方式寄存器初始化
  90   1              CKCON = 0;                                                              // 时钟控制寄存器初始化
  91   1      }
  92          
  93          /********************************************************************
  94          * 功能 : 端口初始化                              `
  95          * 输入 : 无
  96          * 输出 : 无
  97          ***********************************************************************/
  98          
  99          void PortInit(void)
 100          {
 101   1              P0MDOUT = 0xd0;                                                 // 设置两盏灯和P0.4（对应TX0）输出为推挽方式
 102   1              P1MDOUT = 0x03;                                                 // 设置两盏灯输出为推挽方式
 103   1              P3MDOUT = 0x40;                                                 // 设置P3.6（继电器）输出为推挽方式
 104   1              P3MDIN  = 0xCC;                                                 // 设置P3.0,P3.1,P3.4,P3.5为模拟输入
 105   1              XBR0 = 0x01;                                                    // UART TX0, RX0 连到端口引脚 P0.4 和 P0.5。
 106   1              XBR1 = 0x40;                                                    // 交叉开关使能并弱上拉
 107   1      }
 108          
 109          /******************************************************************** 
 110          * 功能 : 串口0初始化
 111          * 输入 : 无
 112          * 输出 : 无
 113          ***********************************************************************/
 114          
 115          void Uart0Init(void)
 116          {
 117   1              SCON0 = 0x50;                                                   // SCON0:模式1,8位UART,使能RX
C51 COMPILER V9.00   MAIN                                                                  10/18/2017 12:41:42 PAGE 3   

 118   1              TMOD |= 0x20;                                                   // TMOD: 定时器工作在模式2, 8位重载
 119   1              TH1 = 256 - (SYSCLK / BAUDRATE / 8);    // 设置定时1用作波特率的重载值
 120   1              TR1 = 1;                                                                // 开定时器1
 121   1              CKCON |= 0x01;                                                  // 定时器1用(系统时钟/4)作为它的时基
 122   1              TI0 = 0;                                                                // 清发送标志位
 123   1      }
 124          
 125          /****************************************************************
 126          * 名称 ：InitAdc()
 127          * 功能 ：初始化AD转换
 128          * 输入 ：无
 129          * 输出 ：无
 130          ****************************************************************/
 131          void InitAdc(void)
 132          {
 133   1              REF0CN = 0x0E;                                                  // 电压基准控制寄存器(PDF.50) /  选择VDD作为VREF
 134   1              AMX0N = 0x1F;                                                   // 负输入通道选择寄存器:单端(PDF.40)    /选择GAN作为负输入
 135   1              ADC0CF = 0xF8;                                                  // ADC0配置寄存器:右对齐
 136   1              ADC0CN = 0x80;                                                  // ADC0控制寄存器:关闭ADC0的窗口比较中断
 137   1      }
 138          
 139          
 140          /****************************************************************
 141          * 名称 ：StartAdc()
 142          * 功能 ：开始AD转换
 143          * 输入 ：Pxx : 待转换的端口
 144          * 输出 ：16位无符号数字量
 145          ****************************************************************/
 146          u32 StartAdc(u8 Pxx)
 147          {
 148   1              u32 temp_long;
 149   1              u32 ain_voltage=0;
 150   1          int j;                                      
 151   1              AMX0P = Pxx;                                                    // 正输入通道选择寄存器(PDF.39)
 152   1          for (j = 0; j <6 ; j++)                                     // 延时
 153   1          Delay(60000);
 154   1              AD0INT = 0;                                                             // 清除转换完成标志
 155   1              AD0BUSY = 1;                                                    // 启动ADC0开始工作
 156   1              while (AD0INT == 0) NOP;                                // 等待ADC转换结束
 157   1              temp_long = ADC0H;                                              // 读取转换结果的高8位
 158   1              temp_long = temp_long << 8;                             // 把读取的8位数据左移8位，移到高8位
 159   1              temp_long |= ADC0L;                                             // 读取转换结果的低8位
 160   1              ain_voltage = temp_long;
 161   1              return ain_voltage;
 162   1      }
 163          
 164          
 165          
 166          /******************************************************************** 
 167          * 功能 : 测AD，将数据放入结构体中，再通过串口0发送
 168          * 输入 : 无
 169          * 输出 : 无
 170          ***********************************************************************/
 171          
 172          void SendAdc()
 173          {
 174   1              u16 adc1;
 175   1              u8 adc2,adc3,adc4,adc5;
 176   1              u32 atemp,ahum,shum,sec,light;                                          //对应空气温度，空气湿度，土壤湿度，土壤电导率，光照度
 177   1              LED2 = 1;
 178   1              relay = 1;
 179   1              Delay_s(5);
C51 COMPILER V9.00   MAIN                                                                  10/18/2017 12:41:42 PAGE 4   

 180   1              atemp=StartAdc(0x08);                                                           //测空气温度对应输入引脚P3.4，其AMX0P对应0x08
 181   1              ahum=StartAdc(0x09);                                                            //测空气湿度对应输入引脚P3.5，其AMX0P对应0x09
 182   1              shum=StartAdc(0x07);                                                            //测土壤湿度对应输入引脚P3.1，其AMX0P对应0x07
 183   1              sec =StartAdc(0x06);                                                            //测土壤电导率对应输入引脚P3.0，其AMX0P对应0x06
 184   1              light=StartAdc(0x05);                                                           //测光照度对应输入引脚P2.6，其AMX0P对应0x05
 185   1              atemp = ((atemp*3270/1024)-600)/3; 
 186   1              ahum = ahum*3270/1024/30;
 187   1              shum = shum*3270/1024*50/1000;                                          //计算湿度方法对应0-100%
 188   1              sec = sec*3270/1024*50/1000;                                            //计算电导率方法对应0-100 us/ms
 189   1              light = light*2*327/5/1024;
 190   1              adc1 = atemp;
 191   1              adc2 = ahum;
 192   1              adc3 = shum;
 193   1              adc4 = sec;
 194   1              adc5 = light;
 195   1              relay = 0;                                                                                 //关继电器
 196   1      //      adc1 = 0x0118;
 197   1              send_data.ZigbeePkg.header              = 0xFD;                 // 点对点标志位
 198   1              send_data.ZigbeePkg.len                 = 0x09;                 // 数据区长度 9
 199   1              send_data.ZigbeePkg.addr[0]             = 0x00;                 // 目标地址 : 0001
 200   1              send_data.ZigbeePkg.addr[1]             = 0x2E;
 201   1              send_data.ZigbeePkg.start               = 0xAA;
 202   1              memcpy(send_data.ZigbeePkg.dat     , &adc1, 2); // 待传数据
 203   1              memcpy(send_data.ZigbeePkg.dat +  2, &adc2, 1);
 204   1              memcpy(send_data.ZigbeePkg.dat +  3, &adc3, 1);
 205   1              memcpy(send_data.ZigbeePkg.dat +  4, &adc4, 1);
 206   1              memcpy(send_data.ZigbeePkg.dat +  5, &adc5, 1);
 207   1              send_data.ZigbeePkg.end1                =0xBB;
 208   1              send_data.ZigbeePkg.end2                =0XCC;
 209   1              ZigbeeSend();
 210   1              Delay_s(1);
 211   1              relay = 0;
 212   1              LED2 = 0;
 213   1      }
 214          
 215          
 216          
 217          /******************************************************************** 
 218          * 功能 : 测AD，将数据放入结构体中，再通过串口0发送
 219          * 输入 : 无
 220          * 输出 : 无
 221          ***********************************************************************/
 222          
 223          void SendAdc2()
 224          {
 225   1              u16 adc1,adc2;
 226   1              u32 temp,hum;
 227   1              LED2 = 1;
 228   1              temp=StartAdc(0x09);                                                    //测空气温度对应输入引脚P3.5，其AMX0P对应0x09
 229   1              hum=StartAdc(0x08);                                                             //测空气温度对应输入引脚P3.4，其AMX0P对应0x08
 230   1              adc1 = ((temp*3270/1024)-600)/3; 
 231   1              adc2 = hum*3270/1024/30;        
 232   1      //      adc1 = 0x0118;
 233   1              send_data.ZigbeePkg.header              = 0xFD;                 // 点对点标志位
 234   1              send_data.ZigbeePkg.len                 = 0x04;                 // 数据区长度 4
 235   1              send_data.ZigbeePkg.addr[0]             = 0X28;                 // 目标地址 : coordinator
 236   1              send_data.ZigbeePkg.addr[1]             = 0X7B;
 237   1              memcpy(send_data.ZigbeePkg.dat     , &adc1, 2); // 待传数据
 238   1              memcpy(send_data.ZigbeePkg.dat +  2, &adc2, 2);
 239   1              ZigbeeSend();
 240   1              LED2 = 0;
 241   1      }
C51 COMPILER V9.00   MAIN                                                                  10/18/2017 12:41:42 PAGE 5   

 242          
 243          /******************************************************************** 
 244          * 功能 : 串口0发送ZIGBEE数据程序，发送前灯3亮，发送完后灯3灭
 245          * 输入 : 无
 246          * 输出 : 无
 247          ***********************************************************************/
 248          
 249          void ZigbeeSend(void)
 250          {
 251   1              int j;                                                                  // 循环发送变量
 252   1              Delay_ms(10);
 253   1              ES0 = 0;
 254   1              for (j = 0; j < ZIGBEE_SEND_LEN; j++)
 255   1              {
 256   2                      SBUF0 = send_data.u8_array[j];          // 将接收到数据送出
 257   2                      while (TI0 == 0) NOP;                           // 发送标志位是否产生
 258   2                      TI0 = 0;                                                        // 清发送标志位
 259   2                      Delay(100);                                                     // 延时                                                                 
 260   2              }
 261   1              ES0 = 1;
 262   1      }
 263          
 264          /********************************************************************
 265          * 功能 : 串口0中断，接收完数据后置位
 266          * 输入 : 无
 267          * 输出 : 无
 268          ***********************************************************************/
 269          void Uart0Isr(void) interrupt 4
 270          {
 271   1              if (!TI0)                                                               // 是发送中断还是接收中断
 272   1              {
 273   2                      RI0 = 0;                                                        // 清接收标志位
 274   2                      recv_data.u8_array[i++] = SBUF0;        // 保存接收到的数据
 275   2                      if (i == ZIGBEE_LEN)
 276   2                      {
 277   3                              receive_bit = 1;                                // 置接收标志
 278   3                              i = 0;
 279   3                      }
 280   2              }
 281   1              TI0 = 0;                                                                // 清发送标志位
 282   1      }
 283          
 284          /********************************************************************
 285          * 名称 : Timer0Init() 
 286          * 功能 : C8051F340的TIMER0的初始化，OX150A对应延时5MS
 287          * 输入 : 无
 288          * 输出 : 无
 289          ***********************************************************************/
 290          void Timer0Init(void)
 291          {
 292   1              CKCON |= 0x04;                                                  // 定时器0使用系统时钟12M
 293   1              TMOD |= 0x01;                                                   // 定时器0使用16位定时器方式
 294   1              TH0 = 0x15;                                                             // 此定时器初始值对应定时5MS
 295   1              TL0 = 0xa0;
 296   1      }
 297          
 298          /********************************************************************
 299          * 名称 : Timer0Isr() 
 300          * 功能 : 定时器中断0服务子程序
 301          * 输入 : 无
 302          * 输出 : 无
 303          ***********************************************************************/
C51 COMPILER V9.00   MAIN                                                                  10/18/2017 12:41:42 PAGE 6   

 304          
 305          void Timer0Isr(void) interrupt 1
 306          {
 307   1              ET0 = 0;                                                        // 关定时器0中断
 308   1              TF0 = 0;                                                        // 清中断标志位
 309   1              ii++;
 310   1              if(ii==2000)                                            //ii最大是65535
 311   1              {
 312   2                      ii=0;
 313   2                      send_ask = 1;   
 314   2              }
 315   1              TR0 = 1;                                                        // 开定时器0
 316   1              ET0 = 1;                                                        // 开定时器0中断
 317   1              
 318   1      }
 319          
 320          /******************************************************************** 
 321          * 功能 : 延时子程序
 322          * 输入 : 无
 323          * 输出 : 无
 324          ***********************************************************************/
 325          
 326          void Delay(u16 i)
 327          {
 328   1              while (i--)
 329   1              {
 330   2                      NOP;
 331   2                      NOP;
 332   2                      NOP;
 333   2              }
 334   1      }
 335          
 336          /********************************************************************
 337          * 功能 : 长延时子程序
 338          * 输入 : 无
 339          * 输出 : 无
 340          ***********************************************************************/
 341          
 342          void Delay_ms(u16 i)
 343          {
 344   1              while(i--)
 345   1              {
 346   2                      Delay(0xffff);
 347   2              }
 348   1      }
 349          
 350          void Delay_s(u16 i)
 351          {
 352   1              while(i--)
 353   1              {
 354   2                      Delay_ms(10);
 355   2              }       
 356   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1143    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     30      50
   IDATA SIZE       =   ----    ----
C51 COMPILER V9.00   MAIN                                                                  10/18/2017 12:41:42 PAGE 7   

   BIT SIZE         =      2    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
